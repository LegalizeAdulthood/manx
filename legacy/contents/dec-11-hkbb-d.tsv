#PART	DEC-11-HKBB-D
#TITLE	KB11-A Central Processor Unit Maintenance Manual
1	Chapter 1	General Description
2	1.1	System Description
3	1.1.1	The Basic System
3	1.1.2	A Faster Basic System
3	1.1.3	A Virtual Machine System
3	1.1.4	Expanded Systems
2	1.2	Functional Description
3	1.2.1	Data Manipulation
3	1.2.2	Transferring Data
3	1.2.3	Handling Instructions
3	1.2.4	Handling Asynchronous Conditions
1	Chapter 2	Address Modes and Instruction Set
2	2.1	Address Modes
2	2.2	KB11-A Instructions
1	Chapter 3	Operation
2	3.1	Console Controls and Indicators
2	3.2	Power On
3	3.2.1	ENABL Function
3	3.2.2	HALT Function
2	3.3	Console Operations
3	3.3.1	HALT Switch Functions
4	3.3.1.1	HALT/CONT with S INST
4	3.3.1.2	HALT/CONT with S BUS CYCLE
3	3.3.2	EXAM Switch Functions
3	3.3.3	DEP Switch Functions
3	3.3.4	REG EXAM and REG DEP Functions
2	3.4	Address Display Select
3	3.4.1	PROG PHY Function
3	3.4.2	CONS PHY Function
3	3.4.3	USER, SUPER, or KERNEL Functions
2	3.5	How to Load and Run Programs
3	3.5.1	Loading the PDP-11 Bootstrap Loader
3	3.5.2	Loading the PDP-11 Absolute Binary Loader
3	3.5.3	Loading the Maintenance Loader
1	Chapter 4	Principles of Operation
2	4.1	Microprogramming
3	4.1.1	Digital Computer Description
3	4.1.2	The Data Section
4	4.1.2.1	The Data Storage Section
4	4.1.2.2	The Data Manipulation Section
4	4.1.2.3	The Data Routing Section
4	4.1.2.4	The Data Section in the KB11-A
3	4.1.3	The Control Section
4	4.1.3.1	The Sequence Control Section
4	4.1.3.2	The Function Generator
4	4.1.3.3	The Sensing Logic
4	4.1.3.4	The Control Section in the KB11-A
3	4.1.4	Microprogramming in the Control Section Implementation
4	4.1.4.1	Conventional Implementation
4	4.1.4.2	Microprogrammed Implementation
2	4.2	Parallel Operation (Pipelining)
2	4.3	Virtual Machines
3	4.3.1	Mapping
3	4.3.2	Resource Management
4	4.3.2.1	Processor Management
4	4.3.2.2	Memory Management
4	4.3.2.3	Memory Use Statistics
3	4.3.3	Communication
4	4.3.3.1	Context Switching
4	4.3.3.2	Inter-Program Data Transfers
4	4.3.3.3	Returning to the Previous Context
3	4.3.4	Protection
4	4.3.4.1	Separate Address Spaces
4	4.3.4.2	Access Modes
4	4.3.4.3	Privileged Instructions
2	4.4	Re-Entrant and Recursive Programming
3	4.4.1	Recursive Functions
3	4.4.2	Use of a Stack in Recursive Routines
3	4.4.3	Re-Entrant Functions
3	4.4.4	Indexed Addressing of Parameters
3	4.4.5	Separate Stack and Index Pointers
3	4.4.6	Subroutine Call Compatibility
3	4.4.7	The MARK Instruction
2	4.5	Processor Status Operation
3	4.5.1	Current Processor Mode
3	4.5.2	Previous Processor Mode
3	4.5.3	Register Set Selection
3	4.5.4	Processor Priority
4	4.5.4.1	Device Priorities
4	4.5.4.2	Program Priorities
4	4.5.4.3	Programmed Interrupt Requests
3	4.5.5	The Trace Bit
3	4.5.6	The Condition Codes
2	4.6	Stack Limit Protection
2	4.7	The Multiply and Divide Instructions
3	4.7.1	Number Representation
3	4.7.2	The Multiply Algorithm
3	4.7.3	Sign Correction During Multiplication
3	4.7.4	The Divide Instruction
1	Chapter 5	Block Diagram Description
2	5.1	Data Paths Block Diagram
2	5.2	General Storage Registers
3	5.2.1	Program Counter (PC)
3	5.2.2	Stack Pointers (SP)
3	5.2.3	General Register Sets
2	5.3	Temporary Storage Registers
3	5.3.1	Source Register (SR)
3	5.3.2	Destination Register (DR)
3	5.3.3	Bus Register (BR and BRA)
2	5.4	Special Purpose Registers
3	5.4.1	Instruction Register (IR)
3	5.4.2	Shift Counter (SC)
3	5.4.3	Processor Status Register (PS)
3	5.4.4	Programmed Interrupt Request Register (PIRQ)
3	5.4.5	Stack Limit Register (SL)
3	5.4.6	Microprogram Break Register (PB)
3	5.4.7	Console Switches (SW) and Light Register (LR)
2	5.5	Data Manipulation
3	5.5.1	Arithmetic and Logic Unit (ALU)
3	5.5.2	Shifter (SHFR)
3	5.5.3	Constant Multiplexers (K0MX, K1MX)
3	5.5.4	Destination Register (DR)
3	5.5.5	Shift Counter (SC)
2	5.6	Data Routing Elements
3	5.6.1	ALU Interface Multiplexers
3	5.6.2	Temporary Storage Register Input Multiplexers
3	5.6.3	External Interface Multiplexers
2	5.7	Control Section
3	5.7.1	ROM Microprogram Control
3	5.7.2	External Interface Control
4	5.7.2.1	Unibus and Console Control (UBC) Module
4	5.7.2.2	Traps and Miscellaneous Control (TMC) Module
4	5.7.2.3	The Timing Generator (TIG) Module
2	5.8	Special Control Logic
3	5.8.1	Arithmetic and Logic Unit (ALU) Control
3	5.8.2	Condition Code Control
3	5.8.3	General Register Control
1	Chapter 6	Microprogram Flow Diagrams
2	6.1	How to Read the Flowcharts
3	6.1.1	Machine State Description
3	6.1.2	Machine State Information in the ROM Map
3	6.1.3	Machine State Sequence Information
3	6.1.4	Sequence Symbols in the Flowcharts
4	6.1.4.1	Flow Lines
4	6.1.4.2	Connector Symbols
4	6.1.4.3	Branch Condition Symbols
3	6.1.5	Locating a Machine State in the Flowcharts
2	6.2	Flowchart Organization
3	6.2.1	Instruction Fetch
4	6.2.1.1	The Fetch States
4	6.2.1.2	Instruction Decoding
4	6.2.1.3	Source Modes 1 through 5
4	6.2.1.4	Move to Previous Space Instructions
4	6.2.1.5	Branch Instructions
3	6.2.2	Indexed Source Modes and Operate Instructions
4	6.2.2.1	Indexed Source Modes
4	6.2.2.2	Floating-Point Instructions
4	6.2.2.3	RTI and RTT Instructions
4	6.2.2.4	RTS Instruction
4	6.2.2.5	SOB Instruction
4	6.2.2.6	MARK Instruction
3	6.2.3	No Memory Reference Execution
4	6.2.3.1	Multiply and Divide with Destination Mode 0
4	6.2.3.2	E CLASS and Negate Instructions
4	6.2.3.3	RESET Instruction
4	6.2.3.4	HALT Instruction
4	6.2.3.5	WAIT Instruction
4	6.2.3.6	Processor Status Change Instructions
3	6.2.4	Destination Mode 0 Sequences
4	6.2.4.1	Not Register 7
4	6.2.4.2	Register 7
4	6.2.4.3	Floating-Point Instruction
3	6.2.5	Destination Modes 1 Through 3
4	6.2.5.1	Sequence Entry
4	6.2.5.2	Destination Modes 1 and 2
4	6.2.5.3	Destination Mode 3
3	6.2.6	Destination Modes 4 Through 7
4	6.2.6.1	Fork C Entries for Modes 4 and 5
4	6.2.6.2	Fork A Entry for Modes 4 and 5
4	6.2.6.3	Destination Modes 6 and 7 Entry
4	6.2.6.4	Ending Sequence
3	6.2.7	ASH, ASHC, and Floating-Point Instructions
4	6.2.7.1	ASH Instruction
4	6.2.7.2	ASHC Instruction
4	6.2.7.3	Condition Code Loading
4	6.2.7.4	ASHC Processing
4	6.2.7.5	Floating-Point Instructions
3	6.2.8	Multiply Instructions
4	6.2.8.1	Multiplication Setup
4	6.2.8.2	Multiplication Process
4	6.2.8.3	Multiplication Correction
3	6.2.9	Divide Instruction Sequence
4	6.2.9.1	Initial Setup
4	6.2.9.2	Negative Dividend Processing
4	6.2.9.3	Overflow Test and First Cycle
4	6.2.9.4	Division Process
4	6.2.9.5	Remainder Storage and Sign Check
4	6.2.9.6	Remainder Correction
4	6.2.9.7	Quotient Sign Change
3	6.2.10	Memory Reference Execution Sequences
4	6.2.10.1	Standard Execution
4	6.2.10.2	Negate Instructions
4	6.2.10.3	Shifter Instructions
4	6.2.10.4	Test Instructions
4	6.2.10.5	Jump Instruction
4	6.2.10.6	Jump to Subroutine Instruction
4	6.2.10.7	Move From Previous Space Instruction
3	6.2.11	Break Conditions Sequences
4	6.2.11.1	Abort Sequence
4	6.2.11.2	Break Sequence
4	6.2.11.3	Power-Up Sequence
4	6.2.11.4	Internal Traps
4	6.2.11.5	Stack Errors
4	6.2.11.6	Internal Vector Generation
4	6.2.11.7	Interrupts
4	6.2.11.8	Floating-Point Instructions
4	6.2.11.9	Trap Instructions
3	6.2.12	The Service Sequence
4	6.2.12.1	PC Fetch
4	6.2.12.2	PS Fetch
4	6.2.12.3	Stacking Setup
4	6.2.12.4	Stacking the Old Values
3	6.2.13	Console Operation Sequences
4	6.2.13.1	Processor Rest State
4	6.2.13.2	Load Address Function
4	6.2.13.3	Register Examine and Deposit
4	6.2.13.4	Memory Examine and Deposit
4	6.2.13.5	Start Operation
4	6.2.13.6	Continue Functions
2	6.3	Following an Instruction Through the Flowcharts
2	6.4	An Instruction Example
1	Chapter 7	Logic Description
2	7.1	DAP Module M8100
3	7.1.1	Bus Register
3	7.1.2	A, B, and Bus Address Multiplexers
3	7.1.3	Constant Multiplexer 1 (K1MX)
3	7.1.4	Arithmetic Logic Unit, Shifter, and Program Counter
4	7.1.4.1	Arithmetic Logic Unit (ALU)
4	7.1.4.2	Shifters and Program Counter
4	7.1.4.3	Shifter Logic
4	7.1.4.4	Program Counter Clocks
4	7.1.4.5	Control Signals
2	7.2	GRA Module M8101
3	7.2.1	Arithmetic Logic Unit Control
4	7.2.1.1	Non-Instruction-Dependent Control
4	7.2.1.2	Instruction-Dependent Control
3	7.2.2	Shifter Zero Detection
4	7.2.2.1	Left Save
4	7.2.2.2	Odd Byte Destination
3	7.2.3	General Register Address Logic
4	7.2.3.1	Source and Destination Address Multiplexers
4	7.2.3.2	General Register Set Selection
4	7.2.3.3	General Register Control Signals
3	7.2.4	General Registers, Source and Destination Multiplexers, and Registers
4	7.2.4.1	General Registers
4	7.2.4.2	Source and Destination Multiplexers
4	7.2.4.3	Source Register (SR)
4	7.2.4.4	Destination Register (DR)
4	7.2.4.5	Control Logic
4	7.2.4.6	Special Signals
4	7.2.4.7	SR15 and DR15
3	7.2.5	Shift Counter
2	7.3	IRC Module M8102
3	7.3.1	Instruction Register (IR)
3	7.3.2	Fork B Logic
4	7.3.2.1	Fork B Instructions
4	7.3.2.2	Fork B Multiplexer
3	7.3.3	Fork C Logic
4	7.3.3.1	Fork C Instruction
4	7.3.3.2	Fork C Multiplexer
3	7.3.4	CCL Decoding
3	7.3.5	C Bit Data
3	7.3.6	N Bit Data
3	7.3.7	Z Bit Data
4	7.3.7.1	ZDATA1 Sources
4	7.3.7.2	ZDATA2 Sources
3	7.3.8	V Bit Data
4	7.3.8.1	VEN1
4	7.3.8.2	VEN2
3	7.3.9	Condition Code Storage
4	7.3.9.1	Clocked Inputs
4	7.3.9.2	BR Inputs
4	7.3.9.3	IR Inputs
4	7.3.9.4	Condition Code Subsidiary ROMs
4	7.3.9.5	ROM Address Multiplexer
4	7.3.9.6	Subsidiary ROMs
2	7.4	PDR Module M8104
3	7.4.1	Bus Register Multiplexer
3	7.4.2	Bus Register A and Light Register
3	7.4.3	Program Break Register
3	7.4.4	Stack Limit Register
3	7.4.5	Program Interrupt Register
3	7.4.6	Processor Status Register
4	7.4.6.1	Condition Codes
4	7.4.6.2	T Bit
4	7.4.6.3	Priority Bits
4	7.4.6.4	General Register Set Bit
4	7.4.6.5	Previous Mode Bits
4	7.4.6.6	Current Mode Bits
4	7.4.6.7	Read PS
3	7.4.7	Unibus A Data Multiplexer
3	7.4.8	Display Multiplexer
3	7.4.9	Console Interconnections
2	7.5	RAC Module M8103
3	7.5.1	ROM Address Register (RAR)
3	7.5.2	Microprogram ROM and Buffer Register
3	7.5.3	Fork A Instruction Decoding
4	7.5.3.1	Decode Logic
4	7.5.3.2	Address Bit Generation
4	7.5.3.3	RACE A0 RAB <02:00>
4	7.5.3.4	RACE A0 RAB03
4	7.5.3.5	RACE A0 RAB04
4	7.5.3.6	RACE A0 RAB05
3	7.5.4	Fork A Circuits
4	7.5.4.1	HALT Through Op Code 7
4	7.5.4.2	X Class
4	7.5.4.3	U Class
4	7.5.4.4	RTS Through CCOP
4	7.5.4.5	RACF A2 RAB03
4	7.5.4.6	TRUE 1:2
3	7.5.5	Fork A Logic
4	7.5.5.1	Branch Instruction Address Generation
4	7.5.5.2	Disable BUST
3	7.5.6	A Fork Instruction Register
3	7.5.7	Microprogram Branch Logic
3	7.5.8	Microprogram Address Assembly
2	7.6	TMC Module M8105
3	7.6.1	Request Storage
4	7.6.1.1	BRQ Clock
4	7.6.1.2	Priority Clear
4	7.6.1.3	Power Fail Clear
4	7.6.1.4	Internal Bus Initialization
3	7.6.2	Priority Arbitration
3	7.6.3	Control Logic
4	7.6.3.1	BRQ TRUE
4	7.6.3.2	Enable Vector
4	7.6.3.3	Branch Enable 13 (BE13)
3	7.6.4	Odd Address Vector
3	7.6.5	Fatal Stack Violation
4	7.6.5.1	Red Zone or Stack Limit Violation
4	7.6.5.2	Internal Address Violation
3	7.6.6	Warning Stack Violation
3	7.6.7	Abort Detection
4	7.6.7.1	KERNEL R6
4	7.6.7.2	Address Error Flag (AERF)
4	7.6.7.3	Stack Error Flag (SERF)
4	7.6.7.4	Block Strobe
3	7.6.8	Internal Address Decoder
3	7.6.9	DMX Select
3	7.6.10	Bus Condition Multiplexer
3	7.6.11	Miscellaneous Control and Bus Delay Signals
3	7.6.12	Internal Bus Signals
3	7.6.13	Bus Register Multiplexer Control
2	7.7	UBC Module M8106
3	7.7.1	Bus Control Introduction
4	7.7.1.1	BUST (Bus Start) Cycle
4	7.7.1.2	PAUSE Cycle
4	7.7.1.3	Unibus Control
3	7.7.2	DATI and DATIP Unibus Transactions
4	7.7.2.1	CPBSY
4	7.7.2.2	Address Deskew
4	7.7.2.3	MSYN
4	7.7.2.4	Bus Pause and DATI
4	7.7.2.5	Bus Long Pause and DATI or DATIP
4	7.7.2.6	BUS LOAD
4	7.7.2.7	DLP DESKEW
4	7.7.2.8	BUSA BBSY L
4	7.7.2.9	TIMEOUT
3	7.7.3	DATO and DATOB Unibus Transactions
3	7.7.4	Fastbus Transactions
3	7.7.5	Fastbus DATI and DATIP
3	7.7.6	Fastbus DATO and DATOB
3	7.7.7	Parity Error Logic
3	7.7.8	NPR and NPG
3	7.7.9	Priority Bus Requests
4	7.7.9.1	NO SACK
4	7.7.9.2	INTR RESTART
3	7.7.10	Interrupt Flag
3	7.7.11	Internal SSYN
3	7.7.12	Data Transfer Control Decoding
4	7.7.12.1	HY BYTE/LO BYTE
4	7.7.12.2	CC DATA
3	7.7.13	Power Control
4	7.7.13.1	Power Down
4	7.7.13.2	Power Up
3	7.7.14	Initialization
4	7.7.14.1	Power-Down/Power-Up
4	7.7.14.2	CNSL RESET
4	7.7.14.3	START
4	7.7.14.4	RESET ABORT
4	7.7.14.5	RESET in Progress
3	7.7.15	Console Switch Inputs
4	7.7.15.1	DEC Data Center Inputs
4	7.7.15.2	Console Control Register
3	7.7.16	Console Control Decoder
4	7.7.16.1	EXAM and STEP EXAM
4	7.7.16.2	DEPOSIT and STEP DEPOSIT
2	7.8	TIG Module M8109
3	7.8.1	Timing Sources
4	7.8.1.1	Crystal Clock
4	7.8.1.2	R/C Clock
4	7.8.1.3	MAINT STPR Switch
3	7.8.2	Source Synchronizer
4	7.8.2.1	Crystal Clock Selection
4	7.8.2.2	RC Clock Selection
4	7.8.2.3	MAINT STPR Selection
4	7.8.2.4	Synchronization
3	7.8.3	Phase Splitter/Buffer
4	7.8.3.1	Level Converter
4	7.8.3.2	Phase Splitter
4	7.8.3.3	Buffers
3	7.8.4	Timing Generator
3	7.8.5	STOP T1
4	7.8.5.1	Not In T4 or T5
4	7.8.5.2	Semiconductor Memory Delay
4	7.8.5.3	Conventional Memory Delay
4	7.8.5.4	Operating System Test
4	7.8.5.5	Single Cycle Mode
3	7.8.6	STOP T3
4	7.8.6.1	Not In T2
4	7.8.6.2	Single Cycle
4	7.8.6.3	ROM + UPB
4	7.6.6.4	Bus Pause or Long Pause Delay
4	7.8.6.5	Interrupt Pause Delay
4	7.8.6.6	Operating System Tester
4	7.8.6.7	KT11-C Delay
3	7.8.7	Timing Pulse Generators
4	7.8.7.1	Positive Timing Pulse Generators
4	7.8.7.2	Negative Timing Pulse Generators
3	7.8.8	Timing State Generators
2	7.9	Console Logic
3	7.9.1	Switch Register and Data Display
4	7.9.1.1	Switch Register Inputs
4	7.9.1.2	DATA Display
3	7.9.2	Address Display and Control
4	7.9.2.1	Address Bits <05:00>
4	7.9.2.2	Address Bits <15:06>
4	7.9.2.3	Address Bits <17:16>
3	7.9.3	Console Mode Control
2	7.10	SJB Module M8116
1	Chapter 8	Maintenance
